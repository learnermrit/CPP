#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    map<char,int> priority;

    Solution() {
        priority['+']=1;
        priority['-']=1;
        priority['*']=2;
        priority['/']=2;
        priority['^']=3;
        priority['(']=0;
    }

    string postFix(string s) {
        
        string postfix="";
        stack<char> st;
        
        for(int i=0;i<s.length();i++){       // postfix= ab+cde/*      //((a+b)â€“c*(d/e))+f
                                             // st= (-
            if(s[i]=='('){
                st.push(s[i]);
            }
            else if(s[i]>='a' && s[i]<='z'){
                postfix+=s[i];
            }
            else if(s[i]=='+' || s[i]=='-' || s[i]=='*' || s[i]=='/' || s[i]=='^' ){
                if(st.empty()){
                    st.push(s[i]);
                }
               // cout<<priority[st.top()];
               else if(priority[s[i]]>priority[st.top()]){
                    st.push(s[i]);
                }
                else if(priority[s[i]]<=priority[st.top()]){
                    while(!st.empty() && priority[s[i]]<=priority[st.top()]){
                        postfix+=st.top();
                        st.pop();
                        
                    }
                    st.push(s[i]);
                }
                
            }
            else if(s[i]==')'){
                while(st.top()!='('){
                        postfix+=st.top();
                        st.pop();
                        
                    }
                    st.pop();
            }
            
           
           
            
        }
        
         while(!st.empty()){
                 postfix+=st.top();
                        st.pop();
            }
        return postfix;
    }
};

int main() {
    string str= "(a+b)*(c-d)/(e+f)^(g*h)+i-j*k/l";
    
   cout<<str3;
   return 1;
    
}
