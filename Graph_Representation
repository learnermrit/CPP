#include <bits/stdc++.h>

using namespace std;
const int n =1e3+10;   //10^3+10
int graph[n][n];       //matrix for saving graph

vector<int> grph[n];  //vector<int> grph[n] for array of vector
                      // vector<int> grph(n) for initial Size 
                     // vector<int> grph(n,3) for size and intialisation with value 3
                     //vector<int> grph={1,2,3,4} initialise

void addEdgeMat(int src,int  des){ //undirected graph addedge by Adjacency matrix
    
    graph[src][des]=1;    
    graph[des][src]=1;
}
void addEdgeMatDirected(int src,int  des){ //directed graph addedge by Adjacency matrix
    
    graph[src][des]=1;    
   
}

void addEdgeList(int src,int des){
    
    grph[src].push_back(des);      
    grph[des].push_back(src);
}

void printVec(vector<int> &v){
    
    for(int val:v){
        cout<<val<<" ";
    }
    cout<<endl;
}

int main() {
   //Adjacency matrix
   addEdgeMat(1,3);
   addEdgeMat(1,2);
   addEdgeMat(2,3);
   addEdgeMat(2,4);
   addEdgeMat(2,5);
   addEdgeMat(5,3);
   addEdgeMat(5,4);
   
   
   //Adjacency list
   addEdgeList(1,2);
   addEdgeList(1,3);
    addEdgeList(2,3);
   addEdgeList(2,4);
   addEdgeList(2,5);
   addEdgeList(5,3);
   addEdgeList(5,4);
   
   printVec(grph[3]);
   
   
   
}
